---
# yamllint disable rule:line-length

stages:
  - init
  - lint
  - apply_sbx
  - destroy
  - git_tag
  - apply_dev

include:
  - project: 'nodeai/pipeline-templates'
    ref: main
    file:
      - 'git/actions.yml'
      - 'terraform/commands.yml'

########################
### Pre Merge
########################
git_actions_gating:
  stage: init
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'  # only on merge requests
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'  # if it's a push to a branch and there is an open merge request: never run it
      when: never

terraform_cmd_validate:
  stage: lint
  variables:
    TERRAFORM_DIR: '.'
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'  # only on merge requests
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'  # if it's a push to a branch and there is an open merge request: never run it
      when: never
    - if: $CI_COMMIT_REF_NAME =~ /^feature/

terraform_cmd_fmt:
  stage: lint
  variables:
    TERRAFORM_DIR: '.'
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'  # only on merge requests
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'  # if it's a push to a branch and there is an open merge request: never run it
      when: never
    - if: $CI_COMMIT_REF_NAME =~ /^feature/

terraform_plan_sbx:
  extends: .terraform_cmd_plan
  stage: lint
  variables:
    TFVARS_PATH: "vars"
    ENVIRONMENT: 'sandbox'
    TERRAFORM_DIR: '.'
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'  # only on merge requests
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'  # if it's a push to a branch and there is an open merge request: never run it
      when: never
    - if: $CI_COMMIT_REF_NAME =~ /^feature/

########################
### Merge Request
########################
terraform_apply_sbx:
  extends: .terraform_cmd_apply
  stage: apply_sbx
  variables:
    TFVARS_PATH: "vars"
    ENVIRONMENT: 'sandbox'
    TERRAFORM_DIR: '.'
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'  # only on merge requests
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'  # if it's a push to a branch and there is an open merge request: never run it
      when: never

terraform_destroy_sbx:
  extends: .terraform_cmd_destroy
  stage: destroy
  variables:
    TFVARS_PATH: "vars"
    ENVIRONMENT: 'sandbox'
    TERRAFORM_DIR: '.'
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'  # only on merge requests
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'  # if it's a push to a branch and there is an open merge request: never run it
      when: never
  when: always

########################
### Post Merge
########################
git_actions_tag:
  stage: git_tag
  rules:
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'  # only when merged to main

terraform_apply_dev:
  extends: .terraform_cmd_apply
  stage: apply_dev
  variables:
    TFVARS_PATH: "vars"
    ENVIRONMENT: 'dev'
    TERRAFORM_DIR: '.'
  rules:
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'  # only when merged to main
